"""restore database

Revision ID: dcd24e4bfef3
Revises: 853f19ea21a8
Create Date: 2023-04-22 20:55:48.844731

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'dcd24e4bfef3'
down_revision = '853f19ea21a8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('AgencyFee')
    op.execute('DROP TABLE IF EXISTS AgencyFee CASCADE')
    op.drop_table('SecurityDeposit')
    op.drop_table('Rent')
    with op.batch_alter_table('Apartment', schema=None) as batch_op:
        batch_op.alter_column('living_area',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=15, decimal_return_scale=4),
               existing_nullable=False)

    with op.batch_alter_table('Price', schema=None) as batch_op:
        batch_op.alter_column('rent',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=15, decimal_return_scale=2),
               existing_nullable=False)
        batch_op.alter_column('charge',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=15, decimal_return_scale=2),
               existing_nullable=False)
        batch_op.alter_column('security_deposit',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=15, decimal_return_scale=2),
               existing_nullable=False)

    with op.batch_alter_table('Rental', schema=None) as batch_op:
        batch_op.alter_column('rental_balance',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=15, decimal_return_scale=2),
               existing_nullable=False)

    with op.batch_alter_table('Tenant', schema=None) as batch_op:
        batch_op.alter_column('annual_salary',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=15, decimal_return_scale=2),
               existing_nullable=False)
        batch_op.alter_column('balance',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=15, decimal_return_scale=2),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('Tenant', schema=None) as batch_op:
        batch_op.alter_column('balance',
               existing_type=sa.Float(precision=15, decimal_return_scale=2),
               type_=sa.REAL(),
               existing_nullable=True)
        batch_op.alter_column('annual_salary',
               existing_type=sa.Float(precision=15, decimal_return_scale=2),
               type_=sa.REAL(),
               existing_nullable=False)

    with op.batch_alter_table('Rental', schema=None) as batch_op:
        batch_op.alter_column('rental_balance',
               existing_type=sa.Float(precision=15, decimal_return_scale=2),
               type_=sa.REAL(),
               existing_nullable=False)

    with op.batch_alter_table('Price', schema=None) as batch_op:
        batch_op.alter_column('security_deposit',
               existing_type=sa.Float(precision=15, decimal_return_scale=2),
               type_=sa.REAL(),
               existing_nullable=False)
        batch_op.alter_column('charge',
               existing_type=sa.Float(precision=15, decimal_return_scale=2),
               type_=sa.REAL(),
               existing_nullable=False)
        batch_op.alter_column('rent',
               existing_type=sa.Float(precision=15, decimal_return_scale=2),
               type_=sa.REAL(),
               existing_nullable=False)

    with op.batch_alter_table('Apartment', schema=None) as batch_op:
        batch_op.alter_column('living_area',
               existing_type=sa.Float(precision=15, decimal_return_scale=4),
               type_=sa.REAL(),
               existing_nullable=False)

    op.create_table('Rent',
    sa.Column('origin', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('payment_id', sa.INTEGER(), server_default=sa.text('nextval(\'"Rent_payment_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('amount', sa.REAL(), autoincrement=False, nullable=False),
    sa.Column('payment_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('rental_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('agency_fee_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['agency_fee_id'], ['AgencyFee.agency_fee_id'], name='Rent_agency_fee_id_fkey'),
    sa.ForeignKeyConstraint(['rental_id'], ['Rental.rental_id'], name='Rent_rental_id_fkey'),
    sa.PrimaryKeyConstraint('payment_id', name='Rent_pkey')
    )
    op.create_table('SecurityDeposit',
    sa.Column('payment_id', sa.INTEGER(), server_default=sa.text('nextval(\'"SecurityDeposit_payment_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('amount', sa.REAL(), autoincrement=False, nullable=False),
    sa.Column('payment_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('rental_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['rental_id'], ['Rental.rental_id'], name='SecurityDeposit_rental_id_fkey'),
    sa.PrimaryKeyConstraint('payment_id', name='SecurityDeposit_pkey')
    )
    op.create_table('AgencyFee',
    sa.Column('agency_fee_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rate', sa.REAL(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('agency_fee_id', name='AgencyFee_pkey'),
    sa.UniqueConstraint('agency_fee_id', name='AgencyFee_agency_fee_id_key')
    )
    # ### end Alembic commands ###
